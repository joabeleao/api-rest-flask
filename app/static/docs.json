{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "API REST FLASK",
        "description": "A sample API using flask framework, Marshmallow and SQLAlchemy",
        "contact": {
            "name": "Joabe Leão",
            "email": "joabe.leao1@gmail.com",
            "url": "https://github.com/joabeleao/"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "consumes": [
        "application/json"
    ],
    "produces": [
       " application/json"
    ],
    "host": "localhost:2222/api",
    "basePath": "/v1", 
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        }
    },

    "schemes": [
        "http",
        "https"
    ],
    "paths": {
        "/auth": {
            "post": {
                "summary": "Retorna um token válido com duração de 12hrs.",
                "tags": [
                    "Auth"
                ],
                "description": "The authentication is set to **Basic auth**.\n
                A **base64** username and password must be sent in the **authorization header**.\n",
                "security": [
                    {
                        "BasicAuth" : []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "exp": {
                                    "type": "string",
                                    "example": "Day, 00 Mon 0000 00:00:00 GMT"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Validated successfully"
                                },
                                "token": {
                                    "type": "string",
                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1Nfsai1iJ9.eyJ1c2VybmFtZSI6ImFkbWluIiw141LaiZXhwIjoxNjU2MDI1NTE4fQ.o_De11N3VW4e5saxQFiW2t-WiOlaamad_dgNigadsfhaV-YY12311ko"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "FORBIDDEN",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "json",
                                    "example": "Invalid username or password"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "UNAUTHORIZED",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "WWW-Authenticate": {
                                    "type": "string",
                                    "example": "Basic auth=login and password required"
                                },
                                "message": {
                                    "type": "json",
                                    "example": "Unauthorized"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "summary": "Returns list of available users on database",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "created_on": {
                                    "type": "string",
                                    "example": "0000-00-00T00:00:00"
                                },
                                "email": {
                                    "type": "string",
                                    "example": "john.doe@mail.com"
                                },
                                "id": {
                                    "type": "string",
                                    "example": "1"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "John Doe"
                                },
                                "password": {
                                    "type": "string",
                                    "example": "pbkdf2:sha256:260000$Ql6PiQcU8pTqSs0p$781cc39b628440e62627a62dd8c26d182f59b6f6797e2cb44dc6b123e1ac5fb1"
                                },
                                "username": {
                                    "type": "string",
                                    "example": "johndoe"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/definitions/401"
                    },
                    "403": {
                        "$ref": "#/definitions/403"
                    },
                    "500": {
                        "$ref": "#/definitions/500"
                    }
                }
            },
            "post": {
                "summary": "Create new user",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [{
                    "name": "user",
                    "in": "body",
                    "required": true,
                    "description": "User to create",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "example": "John Doe"
                            },
                            "username": {
                                "type": "string",
                                "example": "johndoe"
                            },
                            "password": {
                                "type": "string",
                                "example": "j1KiU87j0vG1r"
                            },
                            "email": {
                                "type": "string",
                                "example": "john.doe@mail.com"
                            }
                        }
                    }
                }],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "created_on": {
                                    "type": "string",
                                    "example": "0000-00-00T00:00:00"
                                },
                                "email": {
                                    "type": "string",
                                    "example": "john.doe@mail.com"
                                },
                                "id": {
                                    "type": "string",
                                    "example": "1"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "John Doe"
                                },
                                "password": {
                                    "type": "string",
                                    "example": "pbkdf2:sha256:260000$Ql6PiQcU8pTqSs0p$781cc39b628440e62627a62dd8c26d182f59b6f6797e2cb44dc6b123e1ac5fb1"
                                },
                                "username": {
                                    "type": "string",
                                    "example": "johndoe"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "BAD REQUEST",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "username or e-mail already exists"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/definitions/401"
                    },
                    "403": {
                        "$ref": "#/definitions/403"
                    },
                    "500": {
                        "$ref": "#/definitions/500"
                    } 
                }
            }
        },
        "/users/{id}": {
            "get": {
                "summary": "Return user information",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": "true",
                    "description": "ID of the required user",
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "created_on": {
                                    "type": "string",
                                    "example": "0000-00-00T00:00:00"
                                },
                                "email": {
                                    "type": "string",
                                    "example": "john.doe@mail.com"
                                },
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "name": {
                                    "type": "string",
                                    "example": "John Doe"
                                },
                                "password": {
                                    "type": "string",
                                    "example": "pbkdf2:sha256:260000$Ql6PiQcU8pTqSs0p$781cc39b628440e62627a62dd8c26d182f59b6f6797e2cb44dc6b123e1ac5fb1"
                                },
                                "username": {
                                    "type": "string",
                                    "example": "johndoe"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/definitions/401"
                    },
                    "403": {
                        "$ref": "#/definitions/403"
                    },
                    "404": {
                        "description": "NOT FOUND",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "User not found"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/definitions/500"
                    }
                }
            },
            "put": {
                "summary": "Update and existing user",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": "true"
                },
                {
                    "name": "user",
                    "in": "body",
                    "required": true,
                    "description": "User to update",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "example": "John updated Doe"
                            },
                            "username": {
                                "type": "string",
                                "example": "johndoe.updated"
                            },
                            "password": {
                                "type": "string",
                                "example": "j1KiU87j0vG1r"
                            },
                            "email": {
                                "type": "string",
                                "example": "john.doe@updatedmail.com"
                            }
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "created_on": {
                                    "type": "string",
                                    "example": "0000-00-00T00:00:00"
                                },
                                "email": {
                                    "type": "string",
                                    "example": "john.doe@updatedmail.com"
                                },
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "name": {
                                    "type": "string",
                                    "example": "John updated Doe"
                                },
                                "password": {
                                    "type": "string",
                                    "example": "pbkdf2:sha256:260000$Ql6PiQcU8pTqSs0p$781cc39b628440e62627a62dd8c26d182f59b6f6797e2cb44dc6b123e1ac5fb1"
                                },
                                "username": {
                                    "type": "string",
                                    "example": "johndoe.updated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "BAD REQUEST",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Unable to update. Unavailable username or e-mail"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/definitions/401"
                    },
                    "403": {
                        "$ref": "#/definitions/403"
                    },
                    "404": {
                        "description": "NOT FOUND",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "User not found"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/definitions/500"
                    }
                }
            },
            "delete": {
                "summary": "Delete a user",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": "true",
                    "description": "ID of the required user",
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "created_on": {
                                    "type": "string",
                                    "example": "0000-00-00T00:00:00"
                                },
                                "email": {
                                    "type": "string",
                                    "example": "john.doe@updatedmail.com"
                                },
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "name": {
                                    "type": "string",
                                    "example": "John updated Doe"
                                },
                                "password": {
                                    "type": "string",
                                    "example": "pbkdf2:sha256:260000$Ql6PiQcU8pTqSs0p$781cc39b628440e62627a62dd8c26d182f59b6f6797e2cb44dc6b123e1ac5fb1"
                                },
                                "username": {
                                    "type": "string",
                                    "example": "johndoe.updated"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/definitions/401"
                    },
                    "403": {
                        "$ref": "#/definitions/403"
                    },
                    "404": {
                        "description": "NOT FOUND",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "User not found"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/definitions/500"
                    }
                }
            }
        } 
    },
    "definitions" : {
        "401" : {
            "description": "UNAUTHORIZED",
            "schema": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "string",
                        "example": "{}"
                    },
                    "message": {
                        "type": "string",
                        "example": "token is invalid or missing"
                    }
                }
            }
        },
        "403" : {
            "description": "FORBIDDEN",
            "schema": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "string",
                        "example": "{}"
                    },
                    "message": {
                        "type": "string",
                        "example": "token is invalid or expired"
                    }
                }
            }
        },
        "500" : {
            "description": "INTERNAL SERVER ERROR",
            "schema": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Unable to get data"
                    },
                    "data": {
                        "type": "string",
                        "example": "{}"
                    }
                }
            }
        }
    }
}
